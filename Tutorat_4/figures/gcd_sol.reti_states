index:       1
instruction: LOADI DS -2097152;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          1
PC_SIMPLE:   1
SP:          0
SP_SIMPLE:   0
BAF:         0
BAF_SIMPLE:  0
CS:          0
CS_SIMPLE:   0
DS:          2097152
DS_SIMPLE:   2097152
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0
  00003 LOADI ACC 24;
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 0
  00041 0
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2 <- SP <- BAF <- CS
  00001 MULTI DS 1024; <- PC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21;
  00009 MOVE CS PC;

index:       2
instruction: MULTI DS 1024;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2
PC_SIMPLE:   2
SP:          0
SP_SIMPLE:   0
BAF:         0
BAF_SIMPLE:  0
CS:          0
CS_SIMPLE:   0
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- DS
  00001 2147483648
  00002 0
  00003 LOADI ACC 24;
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 0
  00041 0
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2 <- SP <- BAF <- CS
  00001 MULTI DS 1024;
  00002 MOVE DS SP; <- PC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21;
  00009 MOVE CS PC;

index:       3
instruction: MOVE DS SP;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          3
PC_SIMPLE:   3
SP:          2147483648
SP_SIMPLE:   0
BAF:         0
BAF_SIMPLE:  0
CS:          0
CS_SIMPLE:   0
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- SP <- DS
  00001 2147483648
  00002 0
  00003 LOADI ACC 24;
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 0
  00041 0
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2 <- BAF <- CS
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- PC
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21;
  00009 MOVE CS PC;

index:       4
instruction: MOVE DS BAF;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          4
PC_SIMPLE:   4
SP:          2147483648
SP_SIMPLE:   0
BAF:         2147483648
BAF_SIMPLE:  0
CS:          0
CS_SIMPLE:   0
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- SP <- BAF <- DS
  00001 2147483648
  00002 0
  00003 LOADI ACC 24;
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 0
  00041 0
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2 <- CS
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- PC
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21;
  00009 MOVE CS PC;

index:       5
instruction: MOVE DS CS;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          5
PC_SIMPLE:   5
SP:          2147483648
SP_SIMPLE:   0
BAF:         2147483648
BAF_SIMPLE:  0
CS:          2147483648
CS_SIMPLE:   0
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- SP <- BAF <- CS <- DS
  00001 2147483648
  00002 0
  00003 LOADI ACC 24;
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 0
  00041 0
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65; <- PC
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21;
  00009 MOVE CS PC;

index:       6
instruction: ADDI SP 65;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          6
PC_SIMPLE:   6
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483648
BAF_SIMPLE:  0
CS:          2147483648
CS_SIMPLE:   0
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- BAF <- CS <- DS
  00001 2147483648
  00002 0
  00003 LOADI ACC 24;
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 0
  00041 0
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2; <- PC
  00007 ADDI CS 3;
  00008 ADDI DS 21;
  00009 MOVE CS PC;

index:       7
instruction: ADDI BAF 2;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          7
PC_SIMPLE:   7
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483648
CS_SIMPLE:   0
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- CS <- DS
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24;
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 0
  00041 0
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3; <- PC
  00008 ADDI DS 21;
  00009 MOVE CS PC;

index:       8
instruction: ADDI CS 3;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          8
PC_SIMPLE:   8
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- DS
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 0
  00041 0
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21; <- PC
  00009 MOVE CS PC;

index:       9
instruction: ADDI DS 21;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          9
PC_SIMPLE:   9
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 0
  00041 0
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21;
  00009 MOVE CS PC; <- PC

index:       10
instruction: MOVE CS PC;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483651
PC_SIMPLE:   3
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- PC <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 0
  00041 0
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21;
  00009 MOVE CS PC;

index:       11
instruction: LOADI ACC 24;
ACC:         24
ACC_SIMPLE:  24
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483652
PC_SIMPLE:   4
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40; <- PC
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 0
  00041 0
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21;
  00009 MOVE CS PC;

index:       12
instruction: STORE ACC 40;
ACC:         24
ACC_SIMPLE:  24
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483653
PC_SIMPLE:   5
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16; <- PC
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 24
  00041 0
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21;
  00009 MOVE CS PC;

index:       13
instruction: LOADI ACC 16;
ACC:         16
ACC_SIMPLE:  16
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483654
PC_SIMPLE:   6
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41; <- PC
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 24
  00041 0
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21;
  00009 MOVE CS PC;

index:       14
instruction: STORE ACC 41;
ACC:         16
ACC_SIMPLE:  16
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40; <- PC
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 24
  00041 16
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21;
  00009 MOVE CS PC;

index:       15
instruction: LOAD ACC 40;
ACC:         24
ACC_SIMPLE:  24
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41; <- PC
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 24
  00041 16
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21;
  00009 MOVE CS PC;

index:       16
instruction: SUB ACC 41;
ACC:         8
ACC_SIMPLE:  8
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10; <- PC
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 24
  00041 16
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21; <- ACC
  00009 MOVE CS PC;

index:       17
instruction: JUMP== 10;
ACC:         8
ACC_SIMPLE:  8
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5; <- PC
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 24
  00041 16
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21; <- ACC
  00009 MOVE CS PC;

index:       18
instruction: JUMP> 5;
ACC:         8
ACC_SIMPLE:  8
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40; <- PC
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 24
  00041 16
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21; <- ACC
  00009 MOVE CS PC;

index:       19
instruction: LOAD ACC 40;
ACC:         24
ACC_SIMPLE:  24
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41; <- PC
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 24
  00041 16
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21;
  00009 MOVE CS PC;

index:       20
instruction: SUB ACC 41;
ACC:         8
ACC_SIMPLE:  8
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40; <- PC
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 24
  00041 16
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21; <- ACC
  00009 MOVE CS PC;

index:       21
instruction: STORE ACC 40;
ACC:         8
ACC_SIMPLE:  8
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11; <- PC
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 8
  00041 16
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21; <- ACC
  00009 MOVE CS PC;

index:       22
instruction: JUMP -11;
ACC:         8
ACC_SIMPLE:  8
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40; <- PC
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 8
  00041 16
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21; <- ACC
  00009 MOVE CS PC;

index:       23
instruction: LOAD ACC 40;
ACC:         8
ACC_SIMPLE:  8
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41; <- PC
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 8
  00041 16
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21; <- ACC
  00009 MOVE CS PC;

index:       24
instruction: SUB ACC 41;
ACC:         4294967288
ACC_SIMPLE:  1073741816
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10; <- PC
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 8
  00041 16
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21;
  00009 MOVE CS PC;

index:       25
instruction: JUMP== 10;
ACC:         4294967288
ACC_SIMPLE:  1073741816
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5; <- PC
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 8
  00041 16
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21;
  00009 MOVE CS PC;

index:       26
instruction: JUMP> 5;
ACC:         4294967288
ACC_SIMPLE:  1073741816
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41; <- PC
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 8
  00041 16
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21;
  00009 MOVE CS PC;

index:       27
instruction: LOAD ACC 41;
ACC:         16
ACC_SIMPLE:  16
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40; <- PC
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 8
  00041 16
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21;
  00009 MOVE CS PC;

index:       28
instruction: SUB ACC 40;
ACC:         8
ACC_SIMPLE:  8
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41; <- PC
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 8
  00041 16
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21; <- ACC
  00009 MOVE CS PC;

index:       29
instruction: STORE ACC 41;
ACC:         8
ACC_SIMPLE:  8
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4; <- PC
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 8
  00041 8
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21; <- ACC
  00009 MOVE CS PC;

index:       30
instruction: JUMP 4;
ACC:         8
ACC_SIMPLE:  8
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11; <- PC
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 8
  00041 8
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21; <- ACC
  00009 MOVE CS PC;

index:       31
instruction: JUMP -11;
ACC:         8
ACC_SIMPLE:  8
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40; <- PC
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 8
  00041 8
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21; <- ACC
  00009 MOVE CS PC;

index:       32
instruction: LOAD ACC 40;
ACC:         8
ACC_SIMPLE:  8
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41; <- PC
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 8
  00041 8
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21; <- ACC
  00009 MOVE CS PC;

index:       33
instruction: SUB ACC 41;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10; <- PC
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 8
  00041 8
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21;
  00009 MOVE CS PC;

index:       34
instruction: JUMP== 10;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40; <- PC
  00020 STORE ACC 42;
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 8
  00041 8
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21;
  00009 MOVE CS PC;

index:       35
instruction: LOAD ACC 40;
ACC:         8
ACC_SIMPLE:  8
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42; <- PC
  00021 0 <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 8
  00041 8
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21; <- ACC
  00009 MOVE CS PC;

index:       36
instruction: STORE ACC 42;
ACC:         8
ACC_SIMPLE:  8
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483669
PC_SIMPLE:   21
SP:          2147483713
SP_SIMPLE:   65
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483669
DS_SIMPLE:   21
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 LOADI ACC 24; <- CS
  00004 STORE ACC 40;
  00005 LOADI ACC 16;
  00006 STORE ACC 41;
  00007 LOAD ACC 40;
  00008 SUB ACC 41;
  00009 JUMP== 10;
  00010 JUMP> 5;
  00011 LOAD ACC 41;
  00012 SUB ACC 40;
  00013 STORE ACC 41;
  00014 JUMP 4;
  00015 LOAD ACC 40;
  00016 SUB ACC 41;
  00017 STORE ACC 40;
  00018 JUMP -11;
  00019 LOAD ACC 40;
  00020 STORE ACC 42;
  00021 0 <- PC <- DS
  00022 0
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 8
  00041 8
  00042 8
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 65;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 21; <- ACC
  00009 MOVE CS PC;